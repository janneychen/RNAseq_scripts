

	



		



<!DOCTYPE html>
<html lang="en" >

<head>

	
	<script>
window.ts_endpoint_url = "https:\/\/slack.com\/beacon\/timing";

(function(e) {
	var n=Date.now?Date.now():+new Date,r=e.performance||{},t=[],a={},i=function(e,n){for(var r=0,a=t.length,i=[];a>r;r++)t[r][e]==n&&i.push(t[r]);return i},o=function(e,n){for(var r,a=t.length;a--;)r=t[a],r.entryType!=e||void 0!==n&&r.name!=n||t.splice(a,1)};r.now||(r.now=r.webkitNow||r.mozNow||r.msNow||function(){return(Date.now?Date.now():+new Date)-n}),r.mark||(r.mark=r.webkitMark||function(e){var n={name:e,entryType:"mark",startTime:r.now(),duration:0};t.push(n),a[e]=n}),r.measure||(r.measure=r.webkitMeasure||function(e,n,r){n=a[n].startTime,r=a[r].startTime,t.push({name:e,entryType:"measure",startTime:n,duration:r-n})}),r.getEntriesByType||(r.getEntriesByType=r.webkitGetEntriesByType||function(e){return i("entryType",e)}),r.getEntriesByName||(r.getEntriesByName=r.webkitGetEntriesByName||function(e){return i("name",e)}),r.clearMarks||(r.clearMarks=r.webkitClearMarks||function(e){o("mark",e)}),r.clearMeasures||(r.clearMeasures=r.webkitClearMeasures||function(e){o("measure",e)}),e.performance=r,"function"==typeof define&&(define.amd||define.ajs)&&define("performance",[],function(){return r}) // eslint-disable-line
})(window);

</script>
<script>;(function() {

'use strict';


window.TSMark = function(mark_label) {
	if (!window.performance || !window.performance.mark) return;
	performance.mark(mark_label);
};
window.TSMark('start_load');


window.TSMeasureAndBeacon = function(measure_label, start_mark_label) {
	if (start_mark_label === 'start_nav' && window.performance && window.performance.timing) {
		window.TSBeacon(measure_label, (new Date()).getTime() - performance.timing.navigationStart);
		return;
	}
	if (!window.performance || !window.performance.mark || !window.performance.measure) return;
	performance.mark(start_mark_label + '_end');
	try {
		performance.measure(measure_label, start_mark_label, start_mark_label + '_end');
		window.TSBeacon(measure_label, performance.getEntriesByName(measure_label)[0].duration);
	} catch(e) { return; }
};


window.TSBeacon = function(label, value) {
	var endpoint_url = window.ts_endpoint_url || 'https://slack.com/beacon/timing';
	(new Image()).src = endpoint_url + '?data=' + encodeURIComponent(label + ':' + value);
};

})();
</script>
 

<script>
window.TSMark('step_load');
</script>	<noscript><meta http-equiv="refresh" content="0; URL=/T04Q191S5-F1UFU7TC5-c8c25c7438?nojsmode=1" /></noscript>
<script type="text/javascript">
if(self!==top)window.document.write("\u003Cstyle>body * {display:none !important;}\u003C\/style>\u003Ca href=\"#\" onclick="+
"\"top.location.href=window.location.href\" style=\"display:block !important;padding:10px\">Go to Slack.com\u003C\/a>");

(function() {
	var timer;
	if (self !== top) {
		timer = window.setInterval(function() {
			if (window.$) {
				try {
					$('#page').remove();
					$('#client-ui').remove();
					window.TS = null;
					window.clearInterval(timer);
				} catch(e) {}
			}
		}, 200);
	}
}());

</script>

<script>(function() {
        'use strict';

        window.callSlackAPIUnauthed = function(method, args, callback) {
                var timestamp = Date.now() / 1000;  
                var version = (window.TS && TS.boot_data) ? TS.boot_data.version_uid.substring(0, 8) : 'noversion';
                var url = '/api/' + method + '?_x_id=' + version + '-' + timestamp;
                var req = new XMLHttpRequest();

                req.onreadystatechange = function() {
                        if (req.readyState == 4) {
                                req.onreadystatechange = null;
                                var obj;

                                if (req.status == 200 || req.status == 429) {
                                        try {
                                                obj = JSON.parse(req.responseText);
                                        } catch (err) {
                                                console.warn('unable to do anything with api rsp');
                                        }
                                }

                                obj = obj || {
                                        ok: false
                                }

                                callback(obj.ok, obj, args);
                        }
                }

                var async = true;
                req.open('POST', url, async);

                var form_data = new FormData();
                var has_data = false;
                Object.keys(args).map(function(k) {
                        if (k[0] === '_') return;
                        form_data.append(k, args[k]);
                        has_data = true;
                });

                if (has_data) {
                        req.send(form_data);
                } else {
                        req.send();
                }
        }
})();</script>

						
	
		<script>
			if (window.location.host == 'slack.com' && window.location.search.indexOf('story') < 0) {
				document.cookie = '__cvo_skip_doc=' + escape(document.URL) + '|' + escape(document.referrer) + ';path=/';
			}
		</script>
	

		<script type="text/javascript">
		
		try {
			if(window.location.hash && !window.location.hash.match(/^(#?[a-zA-Z0-9_]*)$/)) {
				window.location.hash = '';
			}
		} catch(e) {}
		
	</script>

	<script type="text/javascript">
				(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
		})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
		ga('create', "UA-106458-17", 'slack.com');

		
			window.optimizely = [];
		
		
		ga('send', 'pageview');
	
		(function(e,c,b,f,d,g,a){e.SlackBeaconObject=d;
		e[d]=e[d]||function(){(e[d].q=e[d].q||[]).push([1*new Date(),arguments])};
		e[d].l=1*new Date();g=c.createElement(b);a=c.getElementsByTagName(b)[0];
		g.async=1;g.src=f;a.parentNode.insertBefore(g,a)
		})(window,document,"script","https://a.slack-edge.com/4e6c/js/libs/slack_beacon.js","sb");
		sb('set', 'token', '3307f436963e02d4f9eb85ce5159744c');

				sb('track', 'pageview');

		function track(a){ga('send','event','web',a);sb('track',a);}

	</script>



<script type='text/javascript'>
	
	/* safety stub */
	window.mixpanel = {
		track: function() {},
		track_links: function() {},
		track_forms: function() {}
	};

	function mixpanel_track(){}
	function mixpanel_track_forms(){}
	function mixpanel_track_links(){}
	
</script>
	
	<meta name="referrer" content="no-referrer">
		<meta name="superfish" content="nofish">

	<script type="text/javascript">



var TS_last_log_date = null;
var TSMakeLogDate = function() {
	var date = new Date();

	var y = date.getFullYear();
	var mo = date.getMonth()+1;
	var d = date.getDate();

	var time = {
	  h: date.getHours(),
	  mi: date.getMinutes(),
	  s: date.getSeconds(),
	  ms: date.getMilliseconds()
	};

	Object.keys(time).map(function(moment, index) {
		if (moment == 'ms') {
			if (time[moment] < 10) {
				time[moment] = time[moment]+'00';
			} else if (time[moment] < 100) {
				time[moment] = time[moment]+'0';
			}
		} else if (time[moment] < 10) {
			time[moment] = '0' + time[moment];
		}
	});

	var str = y + '/' + mo + '/' + d + ' ' + time.h + ':' + time.mi + ':' + time.s + '.' + time.ms;
	if (TS_last_log_date) {
		var diff = date-TS_last_log_date;
		//str+= ' ('+diff+'ms)';
	}
	TS_last_log_date = date;
	return str+' ';
}

var parseDeepLinkRequest = function(code) {
	var m = code.match(/"id":"([CDG][A-Z0-9]{8})"/);
	var id = m ? m[1] : null;

	m = code.match(/"team":"(T[A-Z0-9]{8})"/);
	var team = m ? m[1] : null;

	m = code.match(/"message":"([0-9]+\.[0-9]+)"/);
	var message = m ? m[1] : null;

	return { id: id, team: team, message: message };
}

if ('rendererEvalAsync' in window) {
	var origRendererEvalAsync = window.rendererEvalAsync;
	window.rendererEvalAsync = function(blob) {
		try {
			var data = JSON.parse(decodeURIComponent(atob(blob)));
			if (data.code.match(/handleDeepLink/)) {
				var request = parseDeepLinkRequest(data.code);
				if (!request.id || !request.team || !request.message) return;

				request.cmd = 'channel';
				TSSSB.handleDeepLinkWithArgs(JSON.stringify(request));
				return;
			} else {
				origRendererEvalAsync(blob);
			}
		} catch (e) {
		}
	}
}
</script>



<script type="text/javascript">

	var TSSSB = {
		call: function() {
			return false;
		}
	};

</script>
<script>TSSSB.env = (function() {
	'use strict';

	var v = {
		win_ssb_version: null,
		win_ssb_version_minor: null,
		mac_ssb_version: null,
		mac_ssb_version_minor: null,
		mac_ssb_build: null,
		lin_ssb_version: null,
		lin_ssb_version_minor: null,
		desktop_app_version: null
	};

	var is_win = (navigator.appVersion.indexOf("Windows") !== -1);
	var is_lin = (navigator.appVersion.indexOf("Linux") !== -1);
	var is_mac = !!(navigator.userAgent.match(/(OS X)/g));

	if (navigator.userAgent.match(/(Slack_SSB)/g) || navigator.userAgent.match(/(Slack_WINSSB)/g)) {
		
		var parts = navigator.userAgent.split('/');
		var version_str = parts[parts.length-1];
		var version_float = parseFloat(version_str);
		var version_parts = version_str.split('.');
		var version_minor = (version_parts.length == 3) ? parseInt(version_parts[2]) : 0;

		if (navigator.userAgent.match(/(AtomShell)/g)) {
			
			if (is_lin) {
				v.lin_ssb_version = version_float;
				v.lin_ssb_version_minor = version_minor;
			} else if (is_win) {
				v.win_ssb_version = version_float;
				v.win_ssb_version_minor = version_minor;
			} else if (is_mac) {
				v.mac_ssb_version = version_float;
				v.mac_ssb_version_minor = version_minor;
			}

			if (version_parts.length >= 3) {
				v.desktop_app_version = {
					major: parseInt(version_parts[0]),
					minor: parseInt(version_parts[1]),
					patch: parseInt(version_parts[2])
				}
			}
		} else {
			
			v.mac_ssb_version = version_float;
			v.mac_ssb_version_minor = version_minor;

			
			
			var app_ver = window.macgap && macgap.app && macgap.app.buildVersion && macgap.app.buildVersion();
			var matches = String(app_ver).match(/(?:\()(.*)(?:\))/);
			v.mac_ssb_build = (matches && matches.length == 2) ? parseInt(matches[1] || 0) : 0;
		}
	}

	return v;
})();
</script>


	<script type="text/javascript">
		
		var was_TS = window.TS;
		delete window.TS;
		TSSSB.call('didFinishLoading');
		if (was_TS) window.TS = was_TS;
	</script>
	    <title>Hidden_covariate_linear (HCP) | Slack</title>
    <meta name="author" content="Slack">

	
		
	
	
					
	
				
	
						
	
	
	
	
	
			<!-- output_css "core" -->
    <link href="https://a.slack-edge.com/4128/style/rollup-plastic.css" rel="stylesheet" type="text/css" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)">

		<!-- output_css "before_file_pages" -->
    <link href="https://a.slack-edge.com/74a30/style/libs/codemirror.css" rel="stylesheet" type="text/css" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)">
    <link href="https://a.slack-edge.com/7abb/style/codemirror_overrides.css" rel="stylesheet" type="text/css" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)">

	<!-- output_css "file_pages" -->
    <link href="https://a.slack-edge.com/99b29/style/files.css" rel="stylesheet" type="text/css" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)">
    <link href="https://a.slack-edge.com/17ca/style/public_file.css" rel="stylesheet" type="text/css" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)">
    <link href="https://a.slack-edge.com/2cdf/style/print.css" rel="stylesheet" type="text/css" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)">

		<!-- output_css "regular" -->
    <link href="https://a.slack-edge.com/1d9c/style/libs/lato-1-compressed.css" rel="stylesheet" type="text/css" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)">

	

	
	
		
				<meta property="og:type" content="website">
		<meta property="og:image" content="https://a.slack-edge.com/66f9/img/slack_hash_128.png">
		<meta property="og:image:width" content="128">
		<meta property="og:image:height" content="128">
		<meta property="og:title" content="Hidden_covariate_linear (HCP)">
	<meta property="og:site_name" content="Slack">
	<meta property="og:description" content="Public file shared from https://slack.com/">

			<meta name="twitter:card" content="summary">
		<meta name="twitter:image" content="https://a.slack-edge.com/66f9/img/slack_hash_twitter.png">
		<meta name="twitter:image:width" content="128">
		<meta name="twitter:image:height" content="128">
		<meta name="twitter:site" content="@slackhq">
	<meta name="twitter:title" content="Hidden_covariate_linear (HCP)">
	<meta name="twitter:description" content="Public file shared from https://slack.com/">


	
<link id="favicon" rel="shortcut icon" href="https://a.slack-edge.com/66f9/img/icons/favicon-32.png" sizes="16x16 32x32 48x48" type="image/png" />

<link rel="icon" href="https://a.slack-edge.com/0180/img/icons/app-256.png" sizes="256x256" type="image/png" />

<link rel="apple-touch-icon-precomposed" sizes="152x152" href="https://a.slack-edge.com/66f9/img/icons/ios-152.png" />
<link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://a.slack-edge.com/66f9/img/icons/ios-144.png" />
<link rel="apple-touch-icon-precomposed" sizes="120x120" href="https://a.slack-edge.com/66f9/img/icons/ios-120.png" />
<link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://a.slack-edge.com/66f9/img/icons/ios-114.png" />
<link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://a.slack-edge.com/0180/img/icons/ios-72.png" />
<link rel="apple-touch-icon-precomposed" href="https://a.slack-edge.com/66f9/img/icons/ios-57.png" />

<meta name="msapplication-TileColor" content="#FFFFFF" />
<meta name="msapplication-TileImage" content="https://a.slack-edge.com/66f9/img/icons/app-144.png" />
	
	<!--[if lt IE 9]>
	<script src="https://a.slack-edge.com/ef0d/js/libs/html5shiv.js"></script>
	<![endif]-->

</head>

<body class="				snippet
			">

		  			<script>
		
			var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
			if (w > 1440) document.querySelector('body').classList.add('widescreen');
		
		</script>
	
  	
	


		<div class="file_container snippet_container">
		<label class="checkbox normal mini" for="snippet_wrap"><input type="checkbox" id="snippet_wrap">wrap</label>
		<h1 class="file_title snippet_title">Hidden_covariate_linear (HCP)</h1>
		<div class="file_body snippet_body">
			<div class="CodeMirror cm-s-default CodeMirrorServer" oncopy="if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\u200b/g,''));event.preventDefault();event.stopPropagation();}">
<div class="CodeMirror-code">
<div><pre><span class="cm-comment"># Use Example</span></pre></div>
<div><pre><span class="cm-comment"># hcp = hidden_convariate_linear(standardize(datSeq), standardize(t(datExpr)),k=10,iter = 100)</span></pre></div>
<div><pre>&#8203;</pre></div>
<div><pre>&#8203;</pre></div>
<div><pre>&#8203;</pre></div>
<div><pre><span class="cm-variable">standardize</span><span class="cm-arrow">&lt;-</span> <span class="cm-keyword">function</span>(<span class="cm-variable">X</span>)</pre></div>
<div><pre>{</pre></div>
<div><pre><span class="cm-comment"># This function normalizes a dataset to have column mean of 0 and constant variance</span></pre></div>
<div><pre>&#8203;</pre></div>
<div><pre>  <span class="cm-variable">X</span> <span class="cm-operator">=</span> <span class="cm-variable">as.matrix</span>(<span class="cm-variable">X</span>)</pre></div>
<div><pre>  <span class="cm-variable">X</span> <span class="cm-operator">=</span> <span class="cm-variable">scale</span>(<span class="cm-variable">X</span>, <span class="cm-variable">center</span> <span class="cm-arg-is">=</span> <span class="cm-variable">TRUE</span>, <span class="cm-variable">scale</span> <span class="cm-arg-is">=</span> <span class="cm-variable">TRUE</span>)</pre></div>
<div><pre>  </pre></div>
<div><pre>}</pre></div>
<div><pre>&#8203;</pre></div>
<div><pre><span class="cm-variable">unstandardize</span><span class="cm-arrow">&lt;-</span> <span class="cm-keyword">function</span>(<span class="cm-variable">S</span>, <span class="cm-variable">X</span>)</pre></div>
<div><pre>{</pre></div>
<div><pre>  <span class="cm-comment"># This function normalizes a dataset to have column mean of 0 and constant variance</span></pre></div>
<div><pre>  </pre></div>
<div><pre>  <span class="cm-variable">X</span> <span class="cm-operator">=</span> <span class="cm-variable">as.matrix</span>(<span class="cm-variable">X</span>)</pre></div>
<div><pre>  <span class="cm-variable">c</span><span class="cm-operator">=</span><span class="cm-variable">apply</span>(<span class="cm-variable">X</span>,<span class="cm-number">2</span>,<span class="cm-variable">mean</span>)</pre></div>
<div><pre>  <span class="cm-variable">cmat</span> <span class="cm-operator">=</span> <span class="cm-variable">matrix</span>(<span class="cm-variable">rep</span>(<span class="cm-variable">c</span>, <span class="cm-variable">each</span><span class="cm-arg-is">=</span><span class="cm-variable">nrow</span>(<span class="cm-variable">X</span>)), <span class="cm-variable">nrow</span><span class="cm-arg-is">=</span><span class="cm-variable">nrow</span>(<span class="cm-variable">X</span>))</pre></div>
<div><pre>  <span class="cm-variable">sd</span> <span class="cm-operator">=</span> <span class="cm-variable">apply</span>(<span class="cm-variable">X</span><span class="cm-operator">-</span><span class="cm-variable">cmat</span>,<span class="cm-number">2</span>,<span class="cm-variable">sd</span>) <span class="cm-operator">/</span> <span class="cm-variable">apply</span>(<span class="cm-variable">S</span>,<span class="cm-number">2</span>,<span class="cm-variable">sd</span>)</pre></div>
<div><pre>  <span class="cm-variable">sdmat</span> <span class="cm-operator">=</span> <span class="cm-variable">matrix</span>(<span class="cm-variable">rep</span>(<span class="cm-variable">sd</span>, <span class="cm-variable">each</span><span class="cm-arg-is">=</span><span class="cm-variable">nrow</span>(<span class="cm-variable">X</span>)), <span class="cm-variable">nrow</span><span class="cm-arg-is">=</span><span class="cm-variable">nrow</span>(<span class="cm-variable">X</span>))</pre></div>
<div><pre>&#8203;</pre></div>
<div><pre>  <span class="cm-variable">S.out</span> <span class="cm-operator">=</span> <span class="cm-variable">S</span><span class="cm-operator">*</span><span class="cm-variable">sdmat</span> <span class="cm-operator">+</span> <span class="cm-variable">cmat</span></pre></div>
<div><pre>  <span class="cm-builtin">return</span>(<span class="cm-variable">S.out</span>)</pre></div>
<div><pre>}</pre></div>
<div><pre>&#8203;</pre></div>
<div><pre>&#8203;</pre></div>
<div><pre> <span class="cm-variable">hidden_convariate_linear</span> <span class="cm-arrow">&lt;-</span> <span class="cm-keyword">function</span>(<span class="cm-variable">F</span>,<span class="cm-variable">Y</span>,<span class="cm-variable">k</span> <span class="cm-arg-is">=</span> <span class="cm-number">10</span> ,<span class="cm-variable">lambda</span> <span class="cm-arg-is">=</span> <span class="cm-number">5</span>,<span class="cm-variable">lambda2</span> <span class="cm-arg-is">=</span> <span class="cm-number">1</span>, <span class="cm-variable">lambda3</span> <span class="cm-arg-is">=</span><span class="cm-number">1</span> , <span class="cm-variable">iter</span> <span class="cm-arg-is">=</span> <span class="cm-number">100</span>) {</pre></div>
<div><pre>   <span class="cm-comment">#</span></pre></div>
<div><pre>   <span class="cm-comment">#</span></pre></div>
<div><pre>   <span class="cm-comment"># function [Z,B,U,o,error,error1,error2,dz,db,du] = hidden_covariate_linear(F,Y,k,lambda,lambda2,lambda3,iter);</span></pre></div>
<div><pre>   <span class="cm-comment"># input:</span></pre></div>
<div><pre>   <span class="cm-comment">#      F: a matrix nxd of known covariates, where n is the number of</span></pre></div>
<div><pre>   <span class="cm-comment">#      subjects and d is the number of known covariates. *must be standardize (columns have 0 mean and constant SS).</span></pre></div>
<div><pre>   <span class="cm-comment">#      Y: a matrix of nxg of expression data (must be standardized (columns</span></pre></div>
<div><pre>   <span class="cm-comment">#      scaled to have constant SS and mean 0). ** use standardize function to standardize F and Y.</span></pre></div>
<div><pre>   <span class="cm-comment">#      k: number of inferred hidden components (k is an integer)</span></pre></div>
<div><pre>   <span class="cm-comment">#      lambda, lambda2, lambda3 are model parameters</span></pre></div>
<div><pre>   <span class="cm-comment">#      (optional) iter: number of iterations (default = 100);</span></pre></div>
<div><pre>   <span class="cm-comment">#</span></pre></div>
<div><pre>   <span class="cm-comment">#      note: k&gt;0, lambda&gt;0, lambda2&gt;0, lambda3&gt;0 must be set by the user based on the data at hand. one can set these values</span></pre></div>
<div><pre>   <span class="cm-comment">#      using cross-validation, by evaluating the &quot;performance&quot; of the  resulting residual data on a desired task.</span></pre></div>
<div><pre>   <span class="cm-comment">#      typically, if lambda&gt;5, then hidden factors match the known covariates closely. </span></pre></div>
<div><pre>   <span class="cm-comment">#</span></pre></div>
<div><pre>   <span class="cm-comment"># objective:</span></pre></div>
<div><pre>   <span class="cm-comment">#</span></pre></div>
<div><pre>   <span class="cm-comment"># this function solves the following problem:</span></pre></div>
<div><pre>   <span class="cm-comment"># argmin_{Z,B,U}   ||Y-Z*B||_2 + \lambda*||Z-F*U||_2 + \lambda2*||B||_2 + \lambda_3||U||_2</span></pre></div>
<div><pre>   <span class="cm-comment">#</span></pre></div>
<div><pre>   <span class="cm-comment"># output:</span></pre></div>
<div><pre>   <span class="cm-comment">#      Z: matrix of hidden components, dimensionality: nxk</span></pre></div>
<div><pre>   <span class="cm-comment">#      B: matrix of effects of hidden components, dimensionality: kxg</span></pre></div>
<div><pre>   <span class="cm-comment">#      o: value of objective function on consecutive iterations.</span></pre></div>
<div><pre>   <span class="cm-comment">#</span></pre></div>
<div><pre>   <span class="cm-comment"># to use the residual data: Residual = Y - Z*B</span></pre></div>
<div><pre>   <span class="cm-variable">library</span>(<span class="cm-variable">MASS</span>)</pre></div>
<div><pre>   <span class="cm-variable">library</span>(<span class="cm-variable">pracma</span>)</pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-variable">tol</span> <span class="cm-operator">=</span> <span class="cm-number">1e-6</span><span class="cm-semi">;</span></pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-variable">U</span> <span class="cm-operator">=</span> <span class="cm-variable">matrix</span>(<span class="cm-number">0</span>, <span class="cm-variable">nrow</span><span class="cm-arg-is">=</span><span class="cm-variable">dim</span>(<span class="cm-variable">F</span>)[<span class="cm-number">2</span>],<span class="cm-variable">k</span>)</pre></div>
<div><pre>   <span class="cm-variable">Z</span> <span class="cm-operator">=</span> <span class="cm-variable">matrix</span>(<span class="cm-number">0</span>, <span class="cm-variable">nrow</span><span class="cm-arg-is">=</span><span class="cm-variable">dim</span>(<span class="cm-variable">F</span>)[<span class="cm-number">1</span>],<span class="cm-variable">k</span>)</pre></div>
<div><pre>   <span class="cm-variable">B</span><span class="cm-operator">=</span> <span class="cm-variable">matrix</span>(<span class="cm-variable">runif</span>(<span class="cm-variable">dim</span>(<span class="cm-variable">Z</span>)[<span class="cm-number">2</span>]<span class="cm-operator">*</span><span class="cm-variable">dim</span>(<span class="cm-variable">Y</span>)[<span class="cm-number">2</span>]), <span class="cm-variable">nrow</span><span class="cm-arg-is">=</span><span class="cm-variable">dim</span>(<span class="cm-variable">Z</span>)[<span class="cm-number">2</span>], <span class="cm-variable">ncol</span><span class="cm-arg-is">=</span><span class="cm-variable">dim</span>(<span class="cm-variable">Y</span>)[<span class="cm-number">2</span>])</pre></div>
<div><pre>   <span class="cm-variable">F</span> <span class="cm-operator">=</span> <span class="cm-variable">as.matrix</span>(<span class="cm-variable">F</span>)</pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-variable">n1</span> <span class="cm-operator">=</span> <span class="cm-variable">dim</span>(<span class="cm-variable">F</span>)[<span class="cm-number">1</span>]<span class="cm-semi">;</span></pre></div>
<div><pre>   <span class="cm-variable">d1</span> <span class="cm-operator">=</span> <span class="cm-variable">dim</span>(<span class="cm-variable">F</span>)[<span class="cm-number">2</span>]</pre></div>
<div><pre> </pre></div>
<div><pre>   <span class="cm-variable">n2</span> <span class="cm-operator">=</span> <span class="cm-variable">dim</span>(<span class="cm-variable">Y</span>)[<span class="cm-number">1</span>]</pre></div>
<div><pre>   <span class="cm-variable">d2</span> <span class="cm-operator">=</span> <span class="cm-variable">dim</span>(<span class="cm-variable">Y</span>)[<span class="cm-number">2</span>]</pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-keyword">if</span>(<span class="cm-variable">n1</span><span class="cm-operator">!=</span><span class="cm-variable">n2</span>)    <span class="cm-variable">stop</span>(<span class="cm-string">&quot;</span><span class="cm-string">number of rows in F and Y must agree&quot;</span>)</pre></div>
<div><pre>   </pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-keyword">if</span> (<span class="cm-variable">k</span><span class="cm-operator">&lt;</span><span class="cm-number">1</span> <span class="cm-operator">|</span> <span class="cm-variable">lambda</span><span class="cm-operator">&lt;</span><span class="cm-number">1e-6</span> <span class="cm-operator">|</span> <span class="cm-variable">lambda2</span><span class="cm-operator">&lt;</span><span class="cm-number">1e-6</span> <span class="cm-operator">|</span> <span class="cm-variable">lambda3</span><span class="cm-operator">&lt;</span><span class="cm-number">1e-6</span> ) {</pre></div>
<div><pre>     <span class="cm-variable">stop</span>(<span class="cm-string">&quot;</span><span class="cm-string">lambda, lambda2, lambda3 must be positive and/or k must be an integer&quot;</span>)<span class="cm-semi">;</span></pre></div>
<div><pre>   }</pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-variable">o</span> <span class="cm-operator">=</span> <span class="cm-variable">vector</span>(<span class="cm-variable">length</span><span class="cm-arg-is">=</span><span class="cm-variable">iter</span>)</pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-keyword">for</span> (<span class="cm-variable">ii</span> <span class="cm-keyword">in</span> <span class="cm-number">1</span><span class="cm-operator">:</span><span class="cm-variable">iter</span>) {</pre></div>
<div><pre>     <span class="cm-variable">o</span>[<span class="cm-variable">ii</span>] <span class="cm-operator">=</span> <span class="cm-variable">sum</span>((<span class="cm-variable">Y</span> <span class="cm-operator">-</span> <span class="cm-variable">Z</span><span class="cm-variable-2">%*%</span><span class="cm-variable">B</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>) <span class="cm-operator">+</span> <span class="cm-variable">sum</span>((<span class="cm-variable">Z</span> <span class="cm-operator">-</span>  <span class="cm-variable">F</span><span class="cm-variable-2">%*%</span><span class="cm-variable">U</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>)<span class="cm-operator">*</span><span class="cm-variable">lambda</span> <span class="cm-operator">+</span> (<span class="cm-variable">sum</span>(<span class="cm-variable">B</span><span class="cm-operator">^</span><span class="cm-number">2</span>))<span class="cm-operator">*</span><span class="cm-variable">lambda2</span> <span class="cm-operator">+</span> <span class="cm-variable">lambda3</span><span class="cm-operator">*</span>(<span class="cm-variable">sum</span>(<span class="cm-variable">U</span><span class="cm-operator">^</span><span class="cm-number">2</span>))<span class="cm-semi">;</span></pre></div>
<div><pre>     <span class="cm-variable">Z</span> <span class="cm-operator">=</span> (<span class="cm-variable">Y</span> <span class="cm-variable-2">%*%</span> <span class="cm-variable">t</span>(<span class="cm-variable">B</span>) <span class="cm-operator">+</span> <span class="cm-variable">lambda</span> <span class="cm-operator">*</span> <span class="cm-variable">F</span> <span class="cm-variable-2">%*%</span><span class="cm-variable">U</span>) <span class="cm-variable-2">%*%</span> <span class="cm-variable">ginv</span>(<span class="cm-variable">B</span> <span class="cm-variable-2">%*%</span> <span class="cm-variable">t</span>(<span class="cm-variable">B</span>) <span class="cm-operator">+</span> <span class="cm-variable">lambda</span> <span class="cm-operator">*</span> <span class="cm-variable">diag</span>(<span class="cm-variable">dim</span>(<span class="cm-variable">B</span>)[<span class="cm-number">1</span>]))</pre></div>
<div><pre>     <span class="cm-variable">B</span> <span class="cm-operator">=</span> <span class="cm-variable">mldivide</span>(<span class="cm-variable">t</span>(<span class="cm-variable">Z</span>) <span class="cm-variable-2">%*%</span> <span class="cm-variable">Z</span> <span class="cm-operator">+</span> <span class="cm-variable">lambda2</span> <span class="cm-operator">*</span> <span class="cm-variable">diag</span>(<span class="cm-variable">dim</span>(<span class="cm-variable">Z</span>)[<span class="cm-number">2</span>]), (<span class="cm-variable">t</span>(<span class="cm-variable">Z</span>) <span class="cm-variable-2">%*%</span> <span class="cm-variable">Y</span>))</pre></div>
<div><pre>     <span class="cm-variable">U</span> <span class="cm-operator">=</span> <span class="cm-variable">mldivide</span>(<span class="cm-variable">t</span>(<span class="cm-variable">F</span>) <span class="cm-variable-2">%*%</span> <span class="cm-variable">F</span> <span class="cm-operator">*</span> <span class="cm-variable">lambda</span> <span class="cm-operator">+</span> <span class="cm-variable">lambda3</span> <span class="cm-operator">*</span> <span class="cm-variable">diag</span>(<span class="cm-variable">dim</span>(<span class="cm-variable">U</span>)[<span class="cm-number">1</span>]), <span class="cm-variable">lambda</span> <span class="cm-operator">*</span> <span class="cm-variable">t</span>(<span class="cm-variable">F</span>) <span class="cm-variable-2">%*%</span> <span class="cm-variable">Z</span>)</pre></div>
<div><pre>     </pre></div>
<div><pre>     <span class="cm-keyword">if</span>(<span class="cm-variable">ii</span> <span class="cm-operator">&gt;</span> <span class="cm-number">1</span> <span class="cm-operator">&amp;&amp;</span>  (<span class="cm-variable">abs</span>(<span class="cm-variable">o</span>[<span class="cm-variable">ii</span>]<span class="cm-operator">-</span><span class="cm-variable">o</span>[<span class="cm-variable">ii</span><span class="cm-operator">-</span><span class="cm-number">1</span>])<span class="cm-operator">/</span><span class="cm-variable">o</span>[<span class="cm-variable">ii</span>]) <span class="cm-operator">&lt;</span> <span class="cm-variable">tol</span>)  <span class="cm-keyword">break</span></pre></div>
<div><pre>   }</pre></div>
<div><pre>         </pre></div>
<div><pre>   <span class="cm-variable">error</span> <span class="cm-operator">=</span>  <span class="cm-variable">sum</span>((<span class="cm-variable">Y</span> <span class="cm-operator">-</span> <span class="cm-variable">Z</span><span class="cm-variable-2">%*%</span><span class="cm-variable">B</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>) <span class="cm-operator">/</span> <span class="cm-variable">sum</span>(<span class="cm-variable">Y</span><span class="cm-operator">^</span><span class="cm-number">2</span>)  <span class="cm-operator">+</span> <span class="cm-variable">sum</span>((<span class="cm-variable">Z</span> <span class="cm-operator">-</span> <span class="cm-variable">F</span><span class="cm-variable-2">%*%</span><span class="cm-variable">U</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>)<span class="cm-operator">/</span><span class="cm-variable">sum</span>((<span class="cm-variable">F</span><span class="cm-variable-2">%*%</span><span class="cm-variable">U</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>)</pre></div>
<div><pre>   <span class="cm-variable">error1</span> <span class="cm-operator">=</span> <span class="cm-variable">sum</span>((<span class="cm-variable">Y</span> <span class="cm-operator">-</span> <span class="cm-variable">Z</span><span class="cm-variable-2">%*%</span><span class="cm-variable">B</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>) <span class="cm-operator">/</span> <span class="cm-variable">sum</span>(<span class="cm-variable">Y</span><span class="cm-operator">^</span><span class="cm-number">2</span>)<span class="cm-semi">;</span></pre></div>
<div><pre>   <span class="cm-variable">error2</span> <span class="cm-operator">=</span> <span class="cm-variable">sum</span>((<span class="cm-variable">Z</span> <span class="cm-operator">-</span> <span class="cm-variable">F</span><span class="cm-variable-2">%*%</span><span class="cm-variable">U</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>) <span class="cm-operator">/</span> <span class="cm-variable">sum</span>((<span class="cm-variable">F</span><span class="cm-variable-2">%*%</span><span class="cm-variable">U</span>)<span class="cm-operator">^</span><span class="cm-number">2</span>)<span class="cm-semi">;</span></pre></div>
<div><pre>   </pre></div>
<div><pre>   <span class="cm-variable">dz</span> <span class="cm-operator">=</span> <span class="cm-variable">Z</span><span class="cm-variable-2">%*%</span>(<span class="cm-variable">B</span><span class="cm-variable-2">%*%</span><span class="cm-variable">t</span>(<span class="cm-variable">B</span>) <span class="cm-operator">+</span> <span class="cm-variable">lambda</span><span class="cm-operator">*</span><span class="cm-variable">diag</span>(<span class="cm-variable">dim</span>(<span class="cm-variable">B</span>)[<span class="cm-number">1</span>]))<span class="cm-operator">-</span>(<span class="cm-variable">Y</span><span class="cm-variable-2">%*%</span><span class="cm-variable">t</span>(<span class="cm-variable">B</span>) <span class="cm-operator">+</span> <span class="cm-variable">lambda</span><span class="cm-operator">*</span><span class="cm-variable">F</span><span class="cm-variable-2">%*%</span><span class="cm-variable">U</span>)<span class="cm-semi">;</span></pre></div>
<div><pre>   <span class="cm-variable">db</span> <span class="cm-operator">=</span> (<span class="cm-variable">t</span>(<span class="cm-variable">Z</span>)<span class="cm-variable-2">%*%</span><span class="cm-variable">Z</span> <span class="cm-operator">+</span> <span class="cm-variable">lambda2</span><span class="cm-operator">*</span><span class="cm-variable">diag</span>(<span class="cm-variable">dim</span>(<span class="cm-variable">Z</span>)[<span class="cm-number">2</span>]))<span class="cm-variable-2">%*%</span><span class="cm-variable">B</span> <span class="cm-operator">-</span> <span class="cm-variable">t</span>(<span class="cm-variable">Z</span>)<span class="cm-variable-2">%*%</span><span class="cm-variable">Y</span><span class="cm-semi">;</span></pre></div>
<div><pre>   <span class="cm-variable">du</span> <span class="cm-operator">=</span> (<span class="cm-variable">t</span>(<span class="cm-variable">F</span>)<span class="cm-variable-2">%*%</span><span class="cm-variable">F</span><span class="cm-operator">*</span><span class="cm-variable">lambda</span> <span class="cm-operator">+</span> <span class="cm-variable">lambda3</span><span class="cm-operator">*</span><span class="cm-variable">diag</span>(<span class="cm-variable">dim</span>(<span class="cm-variable">U</span>)[<span class="cm-number">1</span>]))<span class="cm-variable-2">%*%</span><span class="cm-variable">U</span><span class="cm-operator">-</span><span class="cm-variable">lambda</span><span class="cm-operator">*</span><span class="cm-variable">t</span>(<span class="cm-variable">F</span>)<span class="cm-variable-2">%*%</span><span class="cm-variable">Z</span><span class="cm-semi">;</span></pre></div>
<div><pre>                    </pre></div>
<div><pre>           </pre></div>
<div><pre>   <span class="cm-variable">dataout</span> <span class="cm-operator">=</span> <span class="cm-builtin">list</span>(<span class="cm-variable">Z</span> <span class="cm-operator">=</span> <span class="cm-variable">Z</span>, <span class="cm-variable">B</span> <span class="cm-operator">=</span> <span class="cm-variable">B</span>, <span class="cm-variable">U</span> <span class="cm-operator">=</span> <span class="cm-variable">U</span>)</pre></div>
<div><pre>   <span class="cm-builtin">return</span>(<span class="cm-variable">dataout</span>)</pre></div>
<div><pre>                    </pre></div>
<div><pre>  </pre></div>
<div><pre> }</pre></div>
</div>
</div>

		</div>
	</div>


<div id="footer">
	<div id="title">
		<strong>Hidden_covariate_linear (HCP)</strong>
					<span id="meta">
				4KB
				R snippet			</span>
			</div>
	<div id="brand">
		<span id="brand_label">
					Public file shared from <a href="https://slack.com" id="logo"></a>		</span>
	</div>
</div>

<script type="text/javascript">

	function vvv(v) {

		var vvv_warning = 'You cannot use vvv on dynamic values. Please make sure you only pass in static file paths.';
		if (TS && TS.warn) {
			TS.warn(vvv_warning);
		} else {
			console.warn(vvv_warning);
		}

		return v;
	}

	var cdn_url = "https:\/\/slack.global.ssl.fastly.net";
	var inc_js_setup_data = {
		emoji_sheets: {
			apple: 'https://a.slack-edge.com/bfaba/img/emoji_2016_06_08/sheet_apple_64_indexed_256colors.png',
			google: 'https://a.slack-edge.com/f360/img/emoji_2016_06_08/sheet_google_64_indexed_128colors.png',
			twitter: 'https://a.slack-edge.com/bfaba/img/emoji_2016_06_08/sheet_twitter_64_indexed_128colors.png',
			emojione: 'https://a.slack-edge.com/bfaba/img/emoji_2016_06_08/sheet_emojione_64_indexed_128colors.png',
		},
	};
</script><!-- output_js "regular" -->
<script type="text/javascript" src="https://a.slack-edge.com/4a39f/js/libs/jquery.js" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)"></script>
<script type="text/javascript" src="https://a.slack-edge.com/83b2/js/public_file.js" crossorigin="anonymous" onload="window._cdn && _cdn.ok(this, arguments)" onerror="window._cdn && _cdn.failed(this, arguments)"></script>

